#include <DHT.h> // подключение библиотеки для работы с датчиком
#include <WiFi.h> // подключение библиотеки для работы с WiFi
#include <PubSubClient.h>


#define DHTPIN D2 
#define DHTTYPE AM2301

const char*ssid = "your_SSID"; //  название беспроводной точки доступа Wi-Fi
const char*password = "your_password";
const char*mqtt_server = "your_MQTT_broker_IP_adress";


WiFiClient espClient;
PubSubClient client(espClient);

DHT dht(DHTPINH, DHTYPE);

void setup_wifi() {
delay(10);
Serial.println();
Serial.print("Connecting to ");
Serial.println(ssid);

WiFi.begin(ssid, password);

while (WiFi.status()!= WL_CONNECTED) {

delay(500);
Serial.print(".");

}

Serial.println("");
Serial.println("WiFi connected");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());

}

void callback(char* topic, byte* message, unsigned int lenght) {
Serial.print("Message arrived [");
Serial.print("topic");
Serial.print("]");
for (int i = 0; i < length; i++) {
Serial.print((char)message[i]);
}
Serial.println();
}


void reconnect() {
while (!client.connected()) {
Serial.print("Attempting MQTT connection...");
if (client.connected("ESP8266Client")) {
Serial.println("connected");
} else {

Serial.print("failed, rc=");
Serial.print(client.state());
Serial.println("try again in 5 second");
delay(5000);

}

}

}

void setup() {

Serial.begin(9600);
setup_wifi();
client.setServer(mqtt_server, 1883);
client.setCallback(callback);
dht.begin();
}


void loop()

{ 

if (!client.connected())
{
 reconnect();
}

client.loop();
delay(2000);

float temperature = dht.readTemperature();

if(isnan(temperature = dht.readTemperature();

if (isnan(temperature)) {

Serial.println("Failed to read t from DHT!");
return;
}


Serial.print("Temperature: ");
Serial.println(temperature);

if(temperature > 25){
digitalWrite(D1,HIGHT);
} else {
digitalWrite(D1,LOW);
}

char message[50];
sprintf(message, "%.2f", temperature);
client.publish("home/temperature", message);
}







